name: tag-release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'release/tag version'     
        required: true
        default: ''

jobs:
  create-git-tag:
    runs-on: ubuntu-latest # update to self-hosted runner
    if: github.ref != 'refs/heads/main'
    steps:
    - name: Create Tag
      uses: tvdias/github-tagger@v0.0.1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.event.inputs.version }}

  create-github-release:
    runs-on: ubuntu-latest # update to self-hosted runner
    if: github.ref != 'refs/heads/main'
    needs: create-git-tag
    steps:
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: ${{ github.event.inputs.version }}
        body: ${{steps.build_changelog.outputs.changelog}}

  invoke-update-release:
    runs-on: ubuntu-latest # update to self-hosted runner
    if: github.ref != 'refs/heads/main'
    needs: [create-git-tag, create-github-release]
    steps:
    - name: Generate Token
      id: ghapp-token
      uses: tibdex/github-app-token@v1
      with:
        app_id: ${{ secrets.APP_ID }}
        private_key: ${{ secrets.PRIVATE_PEM }}

    - name: Update Release
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: update-release
        token: ${{ steps.ghapp-token.outputs.token }}
        inputs: '{ "version": "${{ github.event.inputs.version }}" }'

  invoke-staging-deploy:
    runs-on: ubuntu-latest # update to self-hosted runner
    if: github.ref != 'refs/heads/main'
    needs: [create-git-tag, create-github-release]
    steps:
    - name: Generate Token
      id: ghapp-token
      uses: tibdex/github-app-token@v1
      with:
        app_id: ${{ secrets.APP_ID }}
        private_key: ${{ secrets.PRIVATE_PEM }}

    - name: Deploy Staging
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: deploy-staging
        token: ${{ steps.ghapp-token.outputs.token }}
        inputs: '{ "version": "${{ github.event.inputs.version }}" }'
